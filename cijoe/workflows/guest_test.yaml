---
doc: |
  This use of the 'qemu' shows how to initialize, start, and stop a qemu guest

  * Start the guest
  * Run a command within the guest (via SSH)
  * Stop the guest again

  This is done via scripts, which in turn are utilizing helper-functions from
  cijoe.qemu.wrapper.

steps:
- name: guest_check
  run: |
    hostname

- name: source_sync
  uses: git_sync
  with:
    upstream: '{{ config.upcie.repository.remote }}'
    branch: '{{ config.upcie.repository.sync.branch }}'
    remote_alias: '{{ config.upcie.repository.sync.remote_alias }}'
    local_path: '{{ config.upcie.repository.path }}'
    remote_path: '{{ config.upcie.repository.sync.remote_path }}'

- name: build
  uses: meson_build
  with:
    source: '{{ config.upcie.repository.sync.remote_path }}'

- name: install
  uses: meson_install
  with:
    source: '{{ config.upcie.repository.sync.remote_path }}'

- name: modprobe
  run: |
    modprobe uio_pci_generic || true
    modprobe vfio-pci || true

- name: hugepages
  run: |
    hugepages setup --size 2048 --count 1024

- name: test
  uses: core.testrunner
  with:
    args: '{{ config.upcie.repository.path }}/tests'
    random_order: false
